[{"/Users/danidona/Desktop/DPL/MAP/client/src/components/SeeHistory.js":"1"},{"size":3723,"mtime":1611846224319,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1plf4jg","/Users/danidona/Desktop/DPL/MAP/client/src/components/SeeHistory.js",["7","8","9","10"],"import Axios from \"axios\";\nimport { useContext, useEffect, useReducer, useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../providers/AuthProvider\";\n\nconst SeeHistory = () => {\n  const [exercise, setExercise] = useState({})\n  const [submissions, setSubmissions] = useState([])\n  const [submission, setSubmission] = useState([])\n\n  const { exercise_id } = useParams()\n\n  const { user } = useContext(AuthContext)\n\n  useEffect(() => {\n    getExercise()\n    exerciseSubmissions()\n  }, []);\n\n  const getExercise = async () => {\n    try {\n      let res = await Axios.get(`/api/exercises/${exercise_id}`)\n      console.log(res.data)\n      setExercise(res.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const exerciseSubmissions = () => {\n    Axios.get(`/api/exercise_subs/?exercise_id=${exercise_id}`)\n    .then((response) => {\n      console.log(response.data)\n      setSubmissions(response.data)\n      setSubmission(response.data[0])\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  const renderSubmissions = () => {\n    return submissions.map((submission)=>{\n      return (\n        <p onClick={()=>{renderClickedSubmission(submission)}}>{submission.created_at} | {exercise.activity} | lbs? | pending </p>\n      )\n    })\n  }\n\n  const renderClickedSubmission = (newSubmission) => {\n    setSubmission(newSubmission)\n    renderVideo(newSubmission);\n  }\n\n  const renderVideo = () => {\n    return (\n      <video \n          className='d-block w-100'\n          src={submission.video}\n          alt=\"Submission video\"\n          style={{height:'450px', width:'500px'}}\n        />\n    )\n  }\n\n  const renderInfo = () => {\n      return <h3>Id: {submission.id} | {submission.created_at} | {user.weight}lbs</h3>\n  }\n\n  const saveTheRender = () => {\n    if(submissions.length === 0) {\n        return (\n          <>\n            <h1>Oops! Looks like you havenâ€™t made any submissions for this exercise. Go make one and then come back!</h1>\n            <h1 style={{textAlign:'center'}}><a class='btn btn-primary'  href={`/showexercise/${exercise_id}`}>Go Back</a></h1>\n          </>\n        )\n    } else {\n        return (\n          <>\n            <a class='btn btn-light'  href={`/showexercise/${exercise_id}`}>Back</a>\n              <Row>\n                <Col>\n                  <h1>VIDEO</h1>\n                  {renderVideo()}\n                </Col>\n                <Col>\n                  <div>\n                    <h1>{exercise.activity}</h1>\n                    {/* <p>level?</p> */} \n                  </div>\n                  <div style={{paddingBottom:'60px', paddingTop:'20px'}}>\n                    {renderInfo()}\n                    <h3 style={{border:'2px solid orange', borderRadius:'20%', width:'110px'}}>Pending</h3>\n                    {/* \n                        <h3 style={{border:'2px solid green', borderRadius:'20%', width:'110px'}}>Completed</h3>\n                        <h3 style={{border:'2px solid red', borderRadius:'20%', width:'110px'}}>Failed</h3> \n                        how do I make this border stick just around 'Pending' or whatever will be written there?\n                        We should make so if it's completed it's green, pending, is orange, and failed is red.\n                    */}\n                  </div>\n                  <div style={{border:'1px solid black'}}>\n                    <h5>History</h5>\n                      {renderSubmissions()}\n                    <p>infinite scroll?</p>\n                  </div>\n                </Col>\n              </Row>\n          </>\n        )\n      }\n    }\n    return saveTheRender()\n  }\n\nexport default SeeHistory;",{"ruleId":"11","severity":1,"message":"12","line":2,"column":33,"nodeType":"13","messageId":"14","endLine":2,"endColumn":43},{"ruleId":"11","severity":1,"message":"15","line":3,"column":10,"nodeType":"13","messageId":"14","endLine":3,"endColumn":16},{"ruleId":"11","severity":1,"message":"16","line":4,"column":10,"nodeType":"13","messageId":"14","endLine":4,"endColumn":14},{"ruleId":"17","severity":1,"message":"18","line":19,"column":6,"nodeType":"19","endLine":19,"endColumn":8,"suggestions":"20"},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'exerciseSubmissions' and 'getExercise'. Either include them or remove the dependency array.","ArrayExpression",["21"],{"desc":"22","fix":"23"},"Update the dependencies array to be: [exerciseSubmissions, getExercise]",{"range":"24","text":"25"},[589,591],"[exerciseSubmissions, getExercise]"]