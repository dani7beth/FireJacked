[{"/Users/danidona/Desktop/DPL/MAP/client/src/exercises/ShowExercise.js":"1","/Users/danidona/Desktop/DPL/MAP/client/src/index.js":"2","/Users/danidona/Desktop/DPL/MAP/client/src/components/SubmissionsFormAdmin.js":"3","/Users/danidona/Desktop/DPL/MAP/client/src/user/UserDash.js":"4","/Users/danidona/Desktop/DPL/MAP/client/src/exercises/ExerciseForm.js":"5","/Users/danidona/Desktop/DPL/MAP/client/src/components/SubmissionsAdmin.js":"6"},{"size":1172,"mtime":1611189111616,"results":"7","hashOfConfig":"8"},{"size":757,"mtime":1611093175752,"results":"9","hashOfConfig":"8"},{"size":1867,"mtime":1611102634441,"results":"10","hashOfConfig":"8"},{"size":722,"mtime":1611073478903,"results":"11","hashOfConfig":"8"},{"size":3310,"mtime":1611191019347,"results":"12","hashOfConfig":"8"},{"size":1146,"mtime":1611068652306,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1plf4jg",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danidona/Desktop/DPL/MAP/client/src/exercises/ShowExercise.js",["27","28"],"/Users/danidona/Desktop/DPL/MAP/client/src/index.js",[],"/Users/danidona/Desktop/DPL/MAP/client/src/components/SubmissionsFormAdmin.js",["29"],"/Users/danidona/Desktop/DPL/MAP/client/src/user/UserDash.js",["30"],"/Users/danidona/Desktop/DPL/MAP/client/src/exercises/ExerciseForm.js",["31","32"],"import React from \"react\";\nimport { useState, useContext, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst ExerciseForm = ({\n  exerciseProp,\n  addExercise,\n  editExercise,\n  showEditFormToggle,\n}) => {\n  const Auth = useContext(AuthContext);\n  const [exercise, setExercise] = useState(\n    exerciseProp\n      ? {\n          name: exerciseProp.name,\n          image: exerciseProp.image,\n          how_to_video: exerciseProp.how_to_video,\n          category: exerciseProp.category,\n          activity: exerciseProp.activity,\n        }\n      : {\n          name: \"\",\n          image: \"\",\n          how_to_video: \"\",\n          category: \"\",\n          activity: \"\",\n        }\n  );\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setExercise({ image: acceptedFiles[0] });\n  }, []);\n\n  const editCallExercise = () => {\n    axios\n      .put(`/api/exercises/${exerciseProp.id}`, exercise)\n      .then((res) => {\n        console.log(res.data);\n        editExercise(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const addCallExercise = async () => {\n    if (exercise.image == null) {\n      alert(\"cant be blank\");\n      return;\n    }\n\n    let imageData = new FormData();\n    imageData.append(\"image\", exercise.image);\n    imageData.append(\"name\", exercise.name);\n    imageData.append(\"how_to_video\", exercise.how_to_video);\n    imageData.append(\"category\", exercise.category);\n    imageData.append(\"activity\", exercise.activity);\n\n    console.log(imageData);\n    try {\n      let res = await axios.post(`/api/exercises`, imageData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setExercise({ ...exercise, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (exerciseProp) {\n      editCallExercise();\n    } else {\n      addCallExercise();\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    acceptedFiles,\n  } = useDropzone({ onDrop });\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p>Image</p>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        )}\n        <input name=\"image\" value={exercise.image} onChange={handleChange} />\n      </div>\n      <aside>\n        <h4>Files</h4>\n        <ul>{files}</ul>\n      </aside>\n      <p>Name</p>\n      <input name=\"name\" value={exercise.name} onChange={handleChange} />\n      <p>How To Video</p>\n      <input\n        name=\"how_to_video\"\n        value={exercise.how_to_video}\n        onChange={handleChange}\n      />\n      <p>Category</p>\n      <input\n        name=\"category\"\n        value={exercise.category}\n        onChange={handleChange}\n      />\n      <p>Activity</p>\n      <input\n        name=\"activity\"\n        value={exercise.activity}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">submit</button>\n    </form>\n  );\n};\n\nexport default ExerciseForm;\n","/Users/danidona/Desktop/DPL/MAP/client/src/components/SubmissionsAdmin.js",[],{"ruleId":"33","severity":1,"message":"34","line":3,"column":10,"nodeType":"35","messageId":"36","endLine":3,"endColumn":14},{"ruleId":"37","severity":1,"message":"38","line":16,"column":6,"nodeType":"39","endLine":16,"endColumn":8,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":15,"column":5,"nodeType":"39","endLine":15,"endColumn":7,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":14,"column":11,"nodeType":"45","endLine":14,"endColumn":35},{"ruleId":"33","severity":1,"message":"46","line":13,"column":9,"nodeType":"35","messageId":"36","endLine":13,"endColumn":13},{"ruleId":"33","severity":1,"message":"47","line":64,"column":11,"nodeType":"35","messageId":"36","endLine":64,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExercise' and 'getLevels'. Either include them or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has a missing dependency: 'getSubmission'. Either include it or remove the dependency array.",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Auth' is assigned a value but never used.","'res' is assigned a value but never used.",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [getExercise, getLevels]",{"range":"54","text":"55"},"Update the dependencies array to be: [getSubmission]",{"range":"56","text":"57"},[394,396],"[getExercise, getLevels]",[371,373],"[getSubmission]"]