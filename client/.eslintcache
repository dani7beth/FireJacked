[{"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/index.js":"1","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/admin/AdminLogin.js":"2","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/exercises/AllExcercises.js":"3","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/submissions/SubmissionsAdmin.js":"4","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/exercises/Exercises.js":"5","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/admin/AdminDash.js":"6","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/admin/AdminUpdateImage.js":"7","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/App.js":"8","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/submissions/SubmissionsFormAdmin.js":"9","/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/user/UserEditForm.js":"10"},{"size":757,"mtime":1611103198175,"results":"11","hashOfConfig":"12"},{"size":996,"mtime":1610659569085,"results":"13","hashOfConfig":"12"},{"size":2432,"mtime":1611352571261,"results":"14","hashOfConfig":"12"},{"size":2118,"mtime":1611352571275,"results":"15","hashOfConfig":"12"},{"size":3117,"mtime":1611352571262,"results":"16","hashOfConfig":"12"},{"size":2161,"mtime":1611359225398,"results":"17","hashOfConfig":"12"},{"size":2781,"mtime":1611359160614,"results":"18","hashOfConfig":"12"},{"size":2469,"mtime":1611354673893,"results":"19","hashOfConfig":"12"},{"size":1930,"mtime":1611352571275,"results":"20","hashOfConfig":"12"},{"size":2041,"mtime":1611358318024,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b09ia3",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/index.js",[],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/admin/AdminLogin.js",[],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/exercises/AllExcercises.js",["44","45"],"import Axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\";\n// import InfiniteScroll from 'react-infinite-scroller';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Button from 'react-bootstrap/Button';\nimport styled from 'styled-components'\nimport { Box } from \"../components/Styles\";\n\n\n\nconst AllExercises = () => {\n\n  const [exercises, setExercises] = useState([])\n  const [page, setPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(0)\n\n  \n  useEffect(()=>{\n    getAllExercises()\n  },[])\n\n\n  const getAllExercises = async() => {\n    try {\n      let res = await Axios.get(\"/api/all_exercises\")\n      console.log(res.data)\n      setExercises(res.data.data)\n      setTotalPages(res.data.total_pages)\n    } catch (error) {\n      console.log(error)\n    }\n\n  };\n\n  const loadMore = async () => {\n    const pageX = page + 1\n    try {\n      let res = await Axios.get(`/api/all_exercises?page=${pageX}`)\n      setExercises([...exercises, ...res.data.data])\n      setPage(pageX)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  \n  const renderAllExercises = () => {\n    return exercises.map((exercise) => {\n      return (\n        <div key={exercise.id}>\n          <Link to={`showexercise/${exercise.id}`}>\n            <h1>{exercise.activity}</h1>\n            <p>{exercise.id}</p>\n          </Link>\n          <p>{exercise.description}</p>\n        </div>\n      )\n    })\n  }\n\n  // const styles = {\n  //   scroller: { \n  //     height: '80vh', \n  //     overflow: 'auto', \n  //   },\n  // }\n  \n  // if(exercises.length + 1  < totalPages*10){\n  //   return (\n  //     <>\n  //       <h1>Choose an exercise</h1>\n  //       {renderAllExercises()}\n  //       <Button variant=\"primary\" onClick={()=>loadMore()}>Load More</Button>\n  //     </>\n  //   )\n  // }\n  \n \n\n  return (\n    <>\n      <h1>Choose an exercise</h1>\n      <Box>\n        <InfiniteScroll\n            dataLength={exercises.length}\n            next={()=>loadMore()}\n            hasMore={exercises.length + 1 < totalPages * 10 ? true : false }\n            loader={<h4>Loading...</h4>}\n            height={700}\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>End of Exercises</b>\n              </p>\n            }\n          >\n        {renderAllExercises()}\n        </InfiniteScroll>\n      </Box>\n    </>\n  )\n\n  \n\n}\n\nexport default AllExercises\n\n",["46","47"],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/submissions/SubmissionsAdmin.js",[],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/exercises/Exercises.js",["48"],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/admin/AdminDash.js",["49"],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/admin/AdminUpdateImage.js",["50","51","52"],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/App.js",[],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/submissions/SubmissionsFormAdmin.js",["53"],"/Users/nathankane/Desktop/dpl/portfolio-project/MAP/client/src/user/UserEditForm.js",[],{"ruleId":"54","severity":1,"message":"55","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"54","severity":1,"message":"58","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":14},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"54","severity":1,"message":"58","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":14},{"ruleId":"54","severity":1,"message":"63","line":22,"column":9,"nodeType":"56","messageId":"57","endLine":22,"endColumn":25},{"ruleId":"54","severity":1,"message":"64","line":9,"column":10,"nodeType":"56","messageId":"57","endLine":9,"endColumn":20},{"ruleId":"54","severity":1,"message":"65","line":9,"column":22,"nodeType":"56","messageId":"57","endLine":9,"endColumn":35},{"ruleId":"54","severity":1,"message":"66","line":68,"column":9,"nodeType":"56","messageId":"57","endLine":68,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":16,"column":5,"nodeType":"69","endLine":16,"endColumn":7,"suggestions":"70"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'updateAdminImage' is assigned a value but never used.","'adminImage' is assigned a value but never used.","'setAdminImage' is assigned a value but never used.","'files' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSubmission'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [getSubmission]",{"range":"76","text":"77"},[424,426],"[getSubmission]"]